<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADs
        CwAAAk1TRnQBSQFMAgEBAwEAATgBAAE4AQABIAEAASABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAGA
        AwABIAMAAQEBAAEgBgABQP8A/wD/AP8A/wBHAAMVARwDLwFJAz4BaQNEAXkDRwGAA0ABbgM1AVYDHwEs
        BAH/ANUAAxQBGwNiAbUg/wOfAeMDMwFR/wDJAAMeASsDVwGlA+sB/Cj/A/MB/QN2AcoDNQFV/wC9AAMx
        AU0Q/wPnAfsDUQGXAyoBQAMTARkDCQEMAyMBMwNAAW8DkgHdEP8DUAGWBALQAAMTARkDIgExAyIBMQMJ
        AQxEAAMJAQwDIgExAygBPAMqAUADKAE8AyIBMQMJAQwDEwEZAyQBNQMqAUADKgFAAyoBQAMqAUADKgFA
        AyoBQAMqAUADKgFAAyoBQAMqAUADKgFAAyoBQAMqAUADKgFAAyYBOAMbASUkAAQBAzkBXwO2AewE/wPz
        Af0DZgG8AzQBUwMHAQkYAAMEAQUDJAE0A1EBlwPrAfwI/wNTAZwEAswAAzsBYgNfAcQDXwHEAyIBMUQA
        AyIBMQNfAcQDpAHwBP8DpAHwA18BxAMiATEDOwFiA2oB0zj/A4AB4gNNAZMkAAMwAUsM/wNKAYcwAAMg
        AS4DwQHwCP8DUAGWzAADRAF4A6QB8AOkAfADKAE8RAADKAE8A6QB8APZAfsE/wPZAfsDpAHwAygBPANE
        AXgDtwH0OP8DzAH4A1kBtCAAAwgBCgN+AdAE/wPnAfsDQwF2AwUBBjQAAysBQQPdAfcI/wM1AVXIAANH
        AYAI/wMqAUBEAAMqAUAU/wMqAUADRwGAQP8DXAG/IAADUQGVDP8DZQG4AwwBDzQAAz4Bawz/A3YBysgA
        A0cBgAj/AyoBQEQAAygBPAOkAfAD2QH7BP8D2QH7A6QB8AMoATwDRAF4A7cB9Dj/A8wB+ANZAbQcAAMd
        ASgD6wH8EP8DiAHYA0YBfAMdASkgAAMMAQ8DOgFgA2UBuAPrAfwM/wPzAf0DMwFRxAADRwGACP8DKgFA
        RAADIgExA18BxAOkAfAE/wOkAfADXwHEAyIBMQM7AWIDagHTOP8DgAHiA00BkxwAA0IBciD/A4gB1gNC
        AXMDJwE6Aw8BFAMGAQgDIAEtAzMBUQNiAbUg/wOeAeIEAcAAA0cBgAj/AyoBQEQAAwkBDAMiATEDKAE8
        AyoBQAMoATwDIgExAwkBDAMTARkDJAE1AyoBQAMqAUADKgFAAyoBQAMqAUADKgFAAyoBQAMqAUADKgFA
        AyoBQAMqAUADKgFAAyoBQAMqAUADJgE4AxsBJRwAA10Bq2T/Ax8BLMAAA0cBgAj/AyoBQEQAAxMBGQM7
        AWIDRAF4A0cBgANEAXgDOwFiAxMBGQMiATEDPgFpA0cBgANHAYADRwGAA0cBgANHAYADRwGAA0cBgANH
        AYADRwGAA0cBgANHAYADRwGAA0cBgANHAYADQQFxAzABShwAA4gB1mT/AzUBVqAAAxMBGQMkATUDKgFA
        AyoBQAMqAUADKgFAAyoBQAMqAUADUQGfCP8DQQFwAyoBQAMqAUADKgFAAyoBQAMqAUADKAE8AyIBMQMJ
        AQwkAAMkATUDagHTA7cB9AT/A7cB9ANqAdMDJAE1Az4BaQN3Ad44/wOMAekDUQGeHAADvAHvJP8D4wH6
        A2oBvgNNAY4DSgGGA10BqwPTAfUo/wNBAXCgAAM7AWIDagHTPP8DpAHwA18BxAMiATEkAAMqAUAU/wMq
        AUADRwGAQP8DXAG/HAAD6wH8JP8DOQFeEAADCwEOA4gB1iT/A0YBfKAAAzsBYgNqAdM8/wOkAfADXwHE
        AyIBMSQAAyoBQBT/AyoBQANHAYBA/wNcAb8cAAPgAfgc/wPjAfoDOQFeGAADIQEvA9MB9SD/A0QBeaAA
        AyIBMQM+AWkDRwGAA0cBgANHAYADRwGAA0cBgANHAYADXAG/CP8DUQGfA0cBgANHAYADRwGAA0cBgANH
        AYADRAF4AzsBYgMTARkkAAMmATgDgAHiA8wB+AT/A8wB+AOAAeIDJgE4A0EBcQOMAek4/wOkAfADVAGp
        HAADrQHpHP8DagG+IAADRgF9IP8DPgFqwAADRwGACP8DKgFARAADGwElA00BkwNZAbQDXAG/A1kBtANN
        AZMDGwElAzABSgNRAZ4DXAG/A1wBvwNcAb8DXAG/A1wBvwNcAb8DXAG/A1wBvwNcAb8DXAG/A1wBvwNc
        Ab8DXAG/A1wBvwNUAakDQAFuHAADdAHJHP8DTQGPIAADFwEfIP8DLwFJwAADRwGACP8DKgFAxAADUwGb
        HP8DSgGGIAADCgENIP8DFQEcwAADRwGACP8DKgFARAADGwElA00BkwNZAbQDXAG/A1kBtANNAZMDGwEl
        AzABSgNRAZ4DXAG/A1wBvwNcAb8DXAG/A1wBvwNcAb8DXAG/A1wBvwNcAb8DXAG/A1wBvwNcAb8DXAG/
        A1wBvwNUAakDQAFuHAADOAFbHP8DXQGrIAADNgFXHP8DYQG0BAHAAANHAYAI/wMqAUBEAAMmATgDgAHi
        A8wB+AT/A8wB+AOAAeIDJgE4A0EBcQOMAek4/wOkAfADVAGpHAADCwEOA+AB+Bj/A9MB9QMLAQ4YAAMG
        AQcDrgHqGP8D6wH8AxQBG8QAA0cBgAj/AyoBQEQAAyoBQBT/AyoBQANHAYBA/wNcAb8gAAM0AVQD4wH6
        GP8DiAHWAyEBLxAAAwYBBwNRAZcc/wNXAaXIAANHAYAI/wMqAUBEAAMqAUAU/wMqAUADRwGAQP8DXAG/
        JAADXQGrHP8D0wH1A0YBfQMWAR4DCQEMAzUBVgOuAeog/wMfASzIAAM+AWkDagHTA2oB0wMkATVEAAMk
        ATUDagHTA7cB9AT/A7cB9ANqAdMDJAE1Az4BaQN3Ad44/wOMAekDUQGeJAADHAEnA40B2kj/A7YB7AMx
        AU3MAAMiATEDOwFiAzsBYgMTARlEAAMTARkDOwFiA0QBeANHAYADRAF4AzsBYgMTARkDIgExAz4BaQNH
        AYADRwGAA0cBgANHAYADRwGAA0cBgANHAYADRwGAA0cBgANHAYADRwGAA0cBgANHAYADRwGAA0EBcQMw
        AUooAAMHAQkDiwHZRP8DOQFe/wC1AAMcAScDXQGrA+MB+jT/A34B0AMwAUsEAf8AvQADNAFUA+AB+Cj/
        A+sB/ANRAZUDBwEJ/wDJAAMLAQ4DOAFbA1MBmwN0AckDrQHpA+IB+QT/A70B7gOIAdYDXQGrA0IBcgMd
        ASn/AP8A/wD/AP8A/wCuAAFCAU0BPgcAAT4DAAEoAwABgAMAASADAAEBAQABAQYAAQIWAAP/AQAM/wQA
        DP8EAAn/AfABBwH/BAAJ/wHAAQMB/wQACf8CAAH/BAAI/wH+AgABPwQAAf8B/AE/Af8B4AIAAQ8B+AEH
        AeABHwQAAf8B/AE/Af8B4AIAAQ8B+AE/AfwBHwQAAf8B/AE/Af8B4AIAAQ8B8AE/Af4BDwQAAf8B/AE/
        Af8B4AIAAQ8B8AE/Af4BDwQAAf8B/AE/Af8B4AIAAQ8B4AEPAfABBwQAAf8B/AE/Af8B4AIAAQ8B4AIA
        AQMEAAH/AfwBPwH/AeACAAEPAeACAAEDBAAB/wH8AT8B/wHgAgABDwHgAgABAwQAAfwCAAE/AeACAAEP
        AeACAAEDBAAB/AIAAT8B4AIAAQ8B4AEDAcABAwQAAfwCAAE/AeACAAEPAeABBwHgAQMEAAH8AgABPwHg
        AgABDwHgAQ8B8AEDBAAB/wH8AT8B/wHgAgABDwHgAQ8B8AEDBAAB/wH8AT8F/wHgAQ8B8AEDBAAB/wH8
        AT8B/wHgAgABDwHgAQ8B8AEDBAAB/wH8AT8B/wHgAgABDwHgAQcB4AEHBAAB/wH8AT8B/wHgAgABDwHw
        AQMBwAEPBAAB/wH8AT8B/wHgAgABDwH4AgABDwQAAf8B/AE/Af8B4AIAAQ8B+AIAAR8EAAH/AfwBPwH/
        AeACAAEPAfwCAAE/BAAI/wH+AgABPwQACf8BgAEAAf8EAAn/AcABAwH/BAAM/wQADP8EAAz/BAAL
</value>
  </data>
</root>